apply plugin: 'com.android.library'
apply plugin: 'com.kezong.fat-aar'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26 // >23 宿主APP需要动态申请相关权限
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {

        // 添加下面的内容
        flatDir {
            dirs 'libs'
        }

        // ... jcenter() 等其他仓库
    }
}

dependencies {
//    api fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'

//    implementation(name: 'alipaySdk-15.6.2', ext: 'aar')
//    api files('libs/alipaySdk-15.6.2.aar')
    embed(name: 'alipaySdk-15.6.2', ext: 'aar') { transitive = true }

//    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'//changed to without mta
}

//---------------------------------------------

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
